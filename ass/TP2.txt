debut:   LDA     0,i
         LDX     0,i
         STA     nbLu,d
         STA     compt,d
bclLect: CHARI   caract,d
         LDA     avCaract,d
         CPA     '\n',i
         BREQ    multi10            
         CPA     '.',i
         BREQ    point
         CPA     '0',i 
         BRLT    erreur
         CPA     '9',i
         BRGT    erreur
         SUBA    '0',i
         LDX     nbLu,d
         ASLX
         ASLX
         ADDX    nbLu,d
         ASLX    
         STX     nbLu,d
         ADDA    nbLu,d
         STA     nbLu,d
         BR      bclLect       

point:   CHARI   caract,d
         LDA     compt,d
         ADDA    1,i
         STA     compt,d
         LDA     avCaract,d
         CPA     '\n',i
         BREQ    verCompt
         LDA     compt,d
         CPA     1,i
         BRGT    erreur
         LDA     avCaract,d            
         CPA     '0',i 
         BRLT    erreur
         CPA     '9',i
         BRGT    erreur
         SUBA    '0',i
         LDX     nbLu,d
         ASLX
         ASLX
         ADDX    nbLu,d
         ASLX    
         STX     nbLu,d
         ADDA    nbLu,d
         STA     nbLu,d
         BR      point

erreur:  STRO    msgErr,d
         BR      fin

multi10: LDX     nbLu,d
         ASLX
         ASLX
         ADDX    nbLu,d
         ASLX    
         STX     nbLu,d
         BR      nbTab

verCompt:LDA     compt,d
         CPA     1,i
         BREQ    multi10
         BR      nbTab

nbTab:   LDX     comptLu,d
         CPX     7,i
         BRGE    fin
         LDA     nbLu,d
         ASLX    
         STA     tabNb,x
         ASRX    
         ADDX    1,i
         STX     comptLu,d
         BR      debut         

fin:     STOP

div:     LDA     divid,d
         LDX     0,i
bclDiv:  SUBA    divis,d
         ADDX    1,i
         CPA     0,i
         BRGE    bclDiv
         ADDA    divis,d
         SUBX    1,i
         STA     reste,d
         STX     res,d
         RET0   

msgErr:  .ASCII  "Entrée invalide\x00"
avCaract:.BLOCK  1
caract:  .BLOCK  1
compt:   .BLOCK  2
nbLu:    .BLOCK  2           ;#2d
reste:   .BLOCK  2           ;#2d
res:     .BLOCK  2           ;#2d
divid:   .BLOCK  2           ;#2d
divis:   .BLOCK  2           ;#2d
comptLu: .BLOCK  2           
tabNb:   .BLOCK  14          
         .END














